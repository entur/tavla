# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
    subscription: Subscription
}

type Codespace {
    codespaceId: String!
}

type Line {
    lineName: String
    lineRef: String
    publicCode: String
}

type Location {
    latitude: Float!
    longitude: Float!
}

type Operator {
    operatorRef: String!
}

type PointsOnLink {
    length: Float
    points: String
}

type Query {
    codespaces: [Codespace]
    lines(codespaceId: String): [Line]
    operators(codespaceId: String!): [Operator]
    serviceJourney(id: String!): ServiceJourney
    serviceJourneys(lineRef: String!): [ServiceJourney]
    vehicles(boundingBox: BoundingBox, codespaceId: String, lineName: String, lineRef: String, mode: VehicleModeEnumeration, monitored: Boolean, operatorRef: String, serviceJourneyId: String, vehicleId: String): [VehicleUpdate]
}

type ServiceJourney {
    id: String!
    pointsOnLink: PointsOnLink @deprecated(reason: "Experimental - should not be used with subscription")
    serviceJourneyId: String! @deprecated(reason: "Use 'id' instead.")
}

type Subscription {
    vehicleUpdates(
        boundingBox: BoundingBox,
        "Number of updates buffered before data is pushed. May be used in combination with bufferTime."
        bufferSize: Int = 20,
        "How long - in milliseconds - data is buffered before data is pushed. May be used in combination with bufferSize."
        bufferTime: Int = 250,
        codespaceId: String,
        lineName: String,
        lineRef: String,
        mode: VehicleModeEnumeration,
        monitored: Boolean,
        operatorRef: String,
        serviceJourneyId: String,
        vehicleId: String
    ): [VehicleUpdate] @deprecated(reason: "Use 'vehicles'.")
    vehicles(
        boundingBox: BoundingBox,
        "Number of updates buffered before data is pushed. May be used in combination with bufferTime."
        bufferSize: Int = 20,
        "How long - in milliseconds - data is buffered before data is pushed. May be used in combination with bufferSize."
        bufferTime: Int = 250,
        codespaceId: String,
        lineName: String,
        lineRef: String,
        mode: VehicleModeEnumeration,
        monitored: Boolean,
        operatorRef: String,
        serviceJourneyId: String,
        vehicleId: String
    ): [VehicleUpdate]
}

type VehicleUpdate {
    bearing: Float
    codespace: Codespace
    "The current delay in seconds - negative delay means ahead of schedule"
    delay: Float
    direction: String
    expiration: DateTime
    expirationEpochSecond: Float
    heading: Float @deprecated(reason: "Use 'bearing''.")
    lastUpdated: DateTime
    lastUpdatedEpochSecond: Float
    line: Line
    location: Location
    mode: VehicleModeEnumeration
    monitored: Boolean
    operator: Operator
    serviceJourney: ServiceJourney
    speed: Float
    vehicleId: String
    vehicleRef: String @deprecated(reason: "Use 'vehicleId'.")
}

enum VehicleModeEnumeration {
    AIR
    BUS
    COACH
    FERRY
    METRO
    RAIL
    TRAM
}

"Java ZonedDateTime as scalar."
scalar DateTime

input BoundingBox {
    maxLat: Float!
    maxLon: Float!
    minLat: Float!
    minLon: Float!
}
