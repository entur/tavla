{
  "__schema": {
    "queryType": {
      "name": "QueryType"
    },
    "mutationType": null,
    "subscriptionType": null,
    "types": [
      {
        "kind": "ENUM",
        "name": "AbsoluteDirection",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "east",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "north",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "northeast",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "northwest",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "south",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "southeast",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "southwest",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "west",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "AlternativeLegsFilter",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "noFilter",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "sameAuthority",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "sameLine",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "sameMode",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "ArrivalDeparture",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "arrivals",
            "description": "Only show arrivals",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "both",
            "description": "Show both arrivals and departures",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "departures",
            "description": "Only show departures",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Authority",
        "description": "Authority involved in public transportation. An organisation under which the responsibility of organising the transport service in a certain area is placed.",
        "fields": [
          {
            "name": "fareUrl",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lang",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lines",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Line",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "phone",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "situations",
            "description": "Get all situations active for the authority.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "PtSituationElement",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "timezone",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "url",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "BicycleOptimisationMethod",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "flat",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "greenways",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "quick",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "safe",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "triangle",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "BikePark",
        "description": null,
        "fields": [
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "latitude",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "longitude",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "realtime",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "spacesAvailable",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "PlaceInterface",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "BikeRentalStation",
        "description": null,
        "fields": [
          {
            "name": "allowDropoff",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikesAvailable",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "latitude",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "longitude",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "networks",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "realtimeOccupancyAvailable",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "spacesAvailable",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "PlaceInterface",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "BikesAllowed",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "allowed",
            "description": "The vehicle being used on this particular trip can accommodate at least one bicycle.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "noInformation",
            "description": "There is no bike information for the trip.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "notAllowed",
            "description": "No bicycles are allowed on this trip.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "BookingArrangement",
        "description": null,
        "fields": [
          {
            "name": "bookWhen",
            "description": "Time constraints for booking",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "PurchaseWhen",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bookingContact",
            "description": "Who should ticket be contacted for booking",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Contact",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bookingMethods",
            "description": "How should service be booked?",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "ENUM",
                "name": "BookingMethod",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bookingNote",
            "description": "Textual description of booking arrangement for service",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "latestBookingDay",
            "description": "How many days prior to the travel the service needs to be booked",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "latestBookingTime",
            "description": "Latest time the service can be booked. ISO 8601 timestamp",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "LocalTime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "minimumBookingPeriod",
            "description": "Minimum period in advance service can be booked as a ISO 8601 duration",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "BookingMethod",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "callDriver",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "callOffice",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "online",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "phoneAtStop",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "text",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Boolean",
        "description": "The `Boolean` scalar type represents `true` or `false`.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Branding",
        "description": null,
        "fields": [
          {
            "name": "description",
            "description": "Description of branding.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "ID",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "image",
            "description": "URL to an image be used for branding",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": "Full name to be used for branding.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "shortName",
            "description": "Short name to be used for branding.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "url",
            "description": "URL to be used for branding",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Contact",
        "description": null,
        "fields": [
          {
            "name": "contactPerson",
            "description": "Name of person to contact",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "email",
            "description": "Email adress for contact",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "furtherDetails",
            "description": "Textual description of how to get in contact",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "phone",
            "description": "Phone number for contact",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "url",
            "description": "Url for contact",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Coordinates",
        "description": "List of coordinates like: [[60.89, 11.12], [62.56, 12.10]]",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Date",
        "description": "Local date using the ISO 8601 format: `YYYY-MM-DD`. Example: `2020-05-17`.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "DateTime",
        "description": "DateTime format accepting ISO 8601 dates with time zone offset.\n\nFormat:  `YYYY-MM-DD'T'hh:mm[:ss](Z|±01:00)`\n\nExample: `2017-04-23T18:25:43+02:00` or `2017-04-23T16:25:43Z`",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "DatedServiceJourney",
        "description": "A planned journey on a specific day",
        "fields": [
          {
            "name": "estimatedCalls",
            "description": "Returns scheduled passingTimes for this dated service journey, updated with realtime-updates (if available). ",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "EstimatedCall",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "journeyPattern",
            "description": "JourneyPattern for the dated service journey.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "JourneyPattern",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "operatingDay",
            "description": "The date this service runs. The date used is based on the service date as opposed to calendar date.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Date",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "quays",
            "description": "Quays visited by the dated service journey.",
            "args": [
              {
                "name": "first",
                "description": "Only fetch the first n quays on the service journey",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "last",
                "description": "Only fetch the last n quays on the service journey",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Quay",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "replacementFor",
            "description": "List of the dated service journeys this dated service journeys replaces",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "DatedServiceJourney",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "serviceJourney",
            "description": "The service journey this Dated Service Journey is based on",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "ServiceJourney",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tripAlteration",
            "description": "Alterations specified on the Trip in the planned data",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "ServiceAlteration",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "DestinationDisplay",
        "description": "An advertised destination of a specific journey pattern, usually displayed on a head sign or at other on-board locations.",
        "fields": [
          {
            "name": "frontText",
            "description": "Name of destination to show on front of vehicle.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "via",
            "description": "Intermediary destinations which the vehicle will pass before reaching its final destination.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "DirectionType",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "anticlockwise",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "clockwise",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "inbound",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "outbound",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "unknown",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "DoubleFunction",
        "description": "A linear function to calculate a value(y) based on a parameter (x): `y = f(x) = a + bx`. It allows setting both a constant(a) and a coefficient(b) and the use those in the computation. Format: `a + b x`. Example: `1800 + 2.0 x`",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "EstimatedCall",
        "description": "List of visits to quays as part of vehicle journeys. Updated with real time information where available",
        "fields": [
          {
            "name": "actualArrivalTime",
            "description": "Actual time of arrival at quay. Updated from real time information if available. NOT IMPLEMENTED",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "DateTime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "actualDepartureTime",
            "description": "Actual time of departure from quay. Updated with real time information if available. NOT IMPLEMENTED",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "DateTime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "aimedArrivalTime",
            "description": "Scheduled time of arrival at quay. Not affected by read time updated",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "aimedDepartureTime",
            "description": "Scheduled time of departure from quay. Not affected by read time updated",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bookingArrangements",
            "description": "Booking arrangements for this EstimatedCall.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "BookingArrangement",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cancellation",
            "description": "Whether stop is cancelled. This means that either the ServiceJourney has a planned cancellation, the ServiceJourney has been cancelled by realtime data, or this particular StopPoint has been cancelled. This also means that both boarding and alighting has been cancelled.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "date",
            "description": "The date the estimated call is valid for.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Date",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "datedServiceJourney",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "DatedServiceJourney",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "destinationDisplay",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "DestinationDisplay",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "expectedArrivalTime",
            "description": "Expected time of arrival at quay. Updated with real time information if available. Will be null if an actualArrivalTime exists",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "expectedDepartureTime",
            "description": "Expected time of departure from quay. Updated with real time information if available. Will be null if an actualDepartureTime exists",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "forAlighting",
            "description": "Whether vehicle may be alighted at quay according to the planned data. If the cancellation flag is set, alighting is not possible, even if this field is set to true.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "forBoarding",
            "description": "Whether vehicle may be boarded at quay according to the planned data. If the cancellation flag is set, boarding is not possible, even if this field is set to true.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "notices",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Notice",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "occupancyStatus",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "ENUM",
                "name": "OccupancyStatus",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "predictionInaccurate",
            "description": "Whether the updated estimates are expected to be inaccurate.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "quay",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Quay",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "realtime",
            "description": "Whether this call has been updated with real time information.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "realtimeState",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "ENUM",
                "name": "RealtimeState",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "requestStop",
            "description": "Whether vehicle will only stop on request.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "serviceJourney",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "ServiceJourney",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "situations",
            "description": "Get all relevant situations for this EstimatedCall.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "PtSituationElement",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stopPositionInPattern",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "timingPoint",
            "description": "Whether this is a timing point or not. Boarding and alighting is not allowed at timing points.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "FilterPlaceType",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "bicycleRent",
            "description": "Bicycle rent stations",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikePark",
            "description": "Bike parks",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "carPark",
            "description": "Car parks",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "quay",
            "description": "Quay",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stopPlace",
            "description": "StopPlace",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Float",
        "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "GroupOfLines",
        "description": "Additional (optional) grouping of lines for particular purposes such as e.g. fare harmonisation or public presentation.",
        "fields": [
          {
            "name": "description",
            "description": "Description of group of lines",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lines",
            "description": "All lines part of this group of lines",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Line",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": "Full name for group of lines.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "privateCode",
            "description": "For internal use by operator/authority.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "shortName",
            "description": "Short name for group of lines.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "ID",
        "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "InputBanned",
        "description": "Filter trips by disallowing lines involving certain elements. If both lines and authorities are specified, only one must be valid for each line to be banned. If a line is both banned and whitelisted, it will be counted as banned.",
        "fields": null,
        "inputFields": [
          {
            "name": "authorities",
            "description": "Set of ids for authorities that should not be used",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": "[]",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lines",
            "description": "Set of ids for lines that should not be used",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": "[]",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "quays",
            "description": "NOT IMPLEMENTED. Set of ids of quays that should not be allowed for boarding or alighting. Trip patterns that travel through the quay will still be permitted.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": "[]",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "quaysHard",
            "description": "NOT IMPLEMENTED. Set of ids of quays that should not be allowed for boarding, alighting or traveling thorugh.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": "[]",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "rentalNetworks",
            "description": "Set of ids of rental networks that should not be allowed for renting vehicles.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": "[]",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "serviceJourneys",
            "description": "Set of ids of service journeys that should not be used.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": "[]",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "InputCoordinates",
        "description": "Input type for coordinates in the WGS84 system",
        "fields": null,
        "inputFields": [
          {
            "name": "latitude",
            "description": "The latitude of the place.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            "defaultValue": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "longitude",
            "description": "The longitude of the place.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            "defaultValue": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "InputField",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "dateTime",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "from",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "to",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "InputPlaceIds",
        "description": null,
        "fields": null,
        "inputFields": [
          {
            "name": "bikeParks",
            "description": "Bike parks to include by id.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeRentalStations",
            "description": "Bike rentals to include by id.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "carParks",
            "description": "Car parks to include by id.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lines",
            "description": "Lines to include by id.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "quays",
            "description": "Quays to include by id.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "InputWhiteListed",
        "description": "Filter trips by only allowing lines involving certain elements. If both lines and authorities are specified, only one must be valid for each line to be used. If a line is both banned and whitelisted, it will be counted as banned.",
        "fields": null,
        "inputFields": [
          {
            "name": "authorities",
            "description": "Set of ids for authorities that should be used",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": "[]",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lines",
            "description": "Set of ids for lines that should be used",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": "[]",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "rentalNetworks",
            "description": "Set of ids of rental networks that should be used for renting vehicles.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": "[]",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Int",
        "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Interchange",
        "description": null,
        "fields": [
          {
            "name": "FromLine",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Line",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "This is the same as using the `fromServiceJourney { line }` field."
          },
          {
            "name": "FromServiceJourney",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "ServiceJourney",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "Use fromServiceJourney instead"
          },
          {
            "name": "ToLine",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Line",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "This is the same as using the `toServiceJourney { line }` field."
          },
          {
            "name": "ToServiceJourney",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "ServiceJourney",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "Use toServiceJourney instead"
          },
          {
            "name": "fromServiceJourney",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "ServiceJourney",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "guaranteed",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "maximumWaitTime",
            "description": "Maximum time after scheduled departure time the connecting transport is guarantied to wait for the delayed trip. [NOT RESPECTED DURING ROUTING, JUST PASSED THROUGH]",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "priority",
            "description": "The transfer priority is used to decide where a transfer should happen, at the highest prioritized location. If the guarantied flag is set it take precedence priority. A guarantied ALLOWED transfer is preferred over a PREFERRED none-guarantied transfer.",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "InterchangePriority",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "staySeated",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "toServiceJourney",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "ServiceJourney",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "InterchangePriority",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "allowed",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "notAllowed",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "preferred",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "recommended",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "InterchangeWeighting",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "interchangeAllowed",
            "description": "Third highest priority interchange.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "noInterchange",
            "description": "Interchange not allowed.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "preferredInterchange",
            "description": "Highest priority interchange.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "recommendedInterchange",
            "description": "Second highest priority interchange.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "ItineraryFilters",
        "description": "Parameters for the OTP Itinerary Filter Chain. These parameters SHOULD be configured on the server side and should not be used by the client. They are made available here to be able to experiment and tune the server.",
        "fields": null,
        "inputFields": [
          {
            "name": "groupSimilarityKeepOne",
            "description": "Pick ONE itinerary from each group after putting itineraries that is 85% similar together.",
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "defaultValue": "0.85",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "groupSimilarityKeepThree",
            "description": "Reduce the number of itineraries in each group to to maximum 3 itineraries. The itineraries are grouped by similar legs (on board same journey). So, if  68% of the distance is traveled by similar legs, then two itineraries are in the same group. Default value is 68%, must be at least 50%.",
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "defaultValue": "0.68",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "groupedOtherThanSameLegsMaxCostMultiplier",
            "description": "Of the itineraries grouped to maximum of three itineraries, how much worse can the non-grouped legs be compared to the lowest cost. 2.0 means that they can be double the cost, and any itineraries having a higher cost will be filtered. Default value is 2.0, use a value lower than 1.0 to turn off",
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "defaultValue": "2",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transitGeneralizedCostLimit",
            "description": "Set a relative limit for all transit itineraries. The limit is calculated based on the transit itinerary generalized-cost and the time between itineraries Itineraries without transit legs are excluded from this filter. Example: costLimitFunction(x) = 3600 + 2.0 x and intervalRelaxFactor = 0.5. If the lowest cost returned is 10 000, then the limit is set to: 3 600 + 2 * 10 000 = 26 600 plus half of the time between either departure or arrival times of the itinerary. Default: {\"costLimitFunction\": 900.0 + 1.5 x, \"intervalRelaxFactor\": 0.4}",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "TransitGeneralizedCostFilterParams",
              "ofType": null
            },
            "defaultValue": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "JourneyPattern",
        "description": null,
        "fields": [
          {
            "name": "directionType",
            "description": null,
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "DirectionType",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "line",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Line",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "notices",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Notice",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pointsOnLink",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "PointsOnLink",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "quays",
            "description": "Quays visited by service journeys for this journey patterns",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Quay",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "serviceJourneys",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "ServiceJourney",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "serviceJourneysForDate",
            "description": "List of service journeys for the journey pattern for a given date",
            "args": [
              {
                "name": "date",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Date",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "ServiceJourney",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "situations",
            "description": "Get all situations active for the journey pattern.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "PtSituationElement",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stopToStopGeometries",
            "description": "Detailed path travelled by journey pattern divided into stop-to-stop sections.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "StopToStopGeometry",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Leg",
        "description": "Part of a trip pattern. Either a ride on a public transport vehicle or access or path link to/from/between places",
        "fields": [
          {
            "name": "aimedEndTime",
            "description": "The aimed date and time this leg ends.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "aimedStartTime",
            "description": "The aimed date and time this leg starts.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "authority",
            "description": "For ride legs, the service authority used for this legs. For non-ride legs, null.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Authority",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeRentalNetworks",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bookingArrangements",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "BookingArrangement",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "datedServiceJourney",
            "description": "The dated service journey used for this leg.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "DatedServiceJourney",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "directDuration",
            "description": "NOT IMPLEMENTED",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Long",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "distance",
            "description": "The distance traveled while traversing the leg in meters.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "duration",
            "description": "The leg's duration in seconds",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Long",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "expectedEndTime",
            "description": "The expected, realtime adjusted date and time this leg ends.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "expectedStartTime",
            "description": "The expected, realtime adjusted date and time this leg starts.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "fromEstimatedCall",
            "description": "EstimatedCall for the quay where the leg originates.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "EstimatedCall",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "fromPlace",
            "description": "The Place where the leg originates.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Place",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "generalizedCost",
            "description": "Generalized cost or weight of the leg. Used for debugging.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "id",
            "description": "An identifier for the leg, which can be used to re-fetch the information.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "ID",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "interchangeFrom",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Interchange",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "interchangeTo",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Interchange",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "intermediateEstimatedCalls",
            "description": "For ride legs, estimated calls for quays between the Place where the leg originates and the Place where the leg ends. For non-ride legs, empty list.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "EstimatedCall",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "intermediateQuays",
            "description": "For ride legs, intermediate quays between the Place where the leg originates and the Place where the leg ends. For non-ride legs, empty list.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Quay",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "line",
            "description": "For ride legs, the line. For non-ride legs, null.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Line",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "mode",
            "description": "The mode of transport or access (e.g., foot) used when traversing this leg.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "ENUM",
                "name": "Mode",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nextLegs",
            "description": "Fetch the next legs, which can be used to replace this leg. The replacement legs do arrive/depart from/to the same stop places. It might be necessary to change other legs in an itinerary in order to be able to ride the returned legs.",
            "args": [
              {
                "name": "filter",
                "description": "Whether the leg should be similar to this leg in some way.",
                "type": {
                  "kind": "ENUM",
                  "name": "AlternativeLegsFilter",
                  "ofType": null
                },
                "defaultValue": "noFilter",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "next",
                "description": "Number of later legs to return.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "1",
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Leg",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "operator",
            "description": "For ride legs, the operator used for this legs. For non-ride legs, null.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Operator",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pointsOnLink",
            "description": "The leg's geometry.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "PointsOnLink",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "previousLegs",
            "description": "Fetch the previous legs, which can be used to replace this leg. The replacement legs do arrive/depart from/to the same stop places. It might be necessary to change other legs in an itinerary in order to be able to ride the returned legs.",
            "args": [
              {
                "name": "filter",
                "description": "Whether the leg should be similar to this leg in some way.",
                "type": {
                  "kind": "ENUM",
                  "name": "AlternativeLegsFilter",
                  "ofType": null
                },
                "defaultValue": "noFilter",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "previous",
                "description": "Number of earlier legs to return.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "1",
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Leg",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "realtime",
            "description": "Whether there is real-time data about this leg",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "rentedBike",
            "description": "Whether this leg is with a rented bike.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ride",
            "description": "Whether this leg is a ride leg or not.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "serviceDate",
            "description": "For transit legs, the service date of the trip. For non-transit legs, null.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Date",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "serviceJourney",
            "description": "For ride legs, the service journey. For non-ride legs, null.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "ServiceJourney",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "serviceJourneyEstimatedCalls",
            "description": "For ride legs, all estimated calls for the service journey. For non-ride legs, empty list.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "EstimatedCall",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "situations",
            "description": "All relevant situations for this leg",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "PtSituationElement",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "steps",
            "description": "Do we continue from a specified via place",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PathGuidance",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "toEstimatedCall",
            "description": "EstimatedCall for the quay where the leg ends.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "EstimatedCall",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "toPlace",
            "description": "The Place where the leg ends.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Place",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transportSubmode",
            "description": "The transport sub mode (e.g., localBus or expressBus) used when traversing this leg. Null if leg is not a ride",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "TransportSubmode",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "walkingBike",
            "description": "Whether this leg is walking with a bike.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Line",
        "description": "A group of routes which is generally known to the public by a similar name or number",
        "fields": [
          {
            "name": "authority",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Authority",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikesAllowed",
            "description": null,
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "BikesAllowed",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bookingArrangements",
            "description": "Booking arrangements for flexible line.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "BookingArrangement",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "BookingArrangements are defined per stop, and can be found under `passingTimes` or `estimatedCalls`"
          },
          {
            "name": "branding",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Branding",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "flexibleLineType",
            "description": "Type of flexible line, or null if line is not flexible.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "groupOfLines",
            "description": "Groups of lines that line is a part of.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "GroupOfLines",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "journeyPatterns",
            "description": null,
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "JourneyPattern",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "notices",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Notice",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "operator",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Operator",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "presentation",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Presentation",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicCode",
            "description": "Publicly announced code for line, differentiating it from other lines for the same operator.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "quays",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Quay",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "serviceJourneys",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ServiceJourney",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "situations",
            "description": "Get all situations active for the line.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "PtSituationElement",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transportMode",
            "description": null,
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "TransportMode",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transportSubmode",
            "description": null,
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "TransportSubmode",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "url",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "LocalTime",
        "description": "Time using the format: HH:mm:SS. Example: 18:25:SS",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "Locale",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "no",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "us",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "Location",
        "description": "Input format for specifying a location through either a place reference (id), coordinates or both. If both place and coordinates are provided the place ref will be used if found, coordinates will only be used if place is not known.",
        "fields": null,
        "inputFields": [
          {
            "name": "coordinates",
            "description": "Coordinates for the location. This can be used alone or as fallback if the place id is not found.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "InputCoordinates",
              "ofType": null
            },
            "defaultValue": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": "The name of the location. This is pass-through informationand is not used in routing.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "place",
            "description": "The id of an element in the OTP model. Currently supports Quay, StopPlace, multimodal StopPlace, and GroupOfStopPlaces.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Long",
        "description": "A 64-bit signed integer",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "Mode",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "air",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bicycle",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cableway",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "car",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "coach",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "foot",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "funicular",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lift",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "metro",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "monorail",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "rail",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "scooter",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tram",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "trolleybus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "water",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "Modes",
        "description": "Input format for specifying which modes will be allowed for this search. If this element is not present, it will default to accessMode/egressMode/directMode of foot and all transport modes will be allowed.",
        "fields": null,
        "inputFields": [
          {
            "name": "accessMode",
            "description": "The mode used to get from the origin to the access stops in the transit network the transit network (first-mile). If the element is not present or null,only transit that can be immediately boarded from the origin will be used.",
            "type": {
              "kind": "ENUM",
              "name": "StreetMode",
              "ofType": null
            },
            "defaultValue": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "directMode",
            "description": "The mode used to get from the origin to the destination directly, without using the transit network. If the element is not present or null,direct travel without using transit will be disallowed.",
            "type": {
              "kind": "ENUM",
              "name": "StreetMode",
              "ofType": null
            },
            "defaultValue": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "egressMode",
            "description": "The mode used to get from the egress stops in the transit network tothe destination (last-mile). If the element is not present or null,only transit that can immediately arrive at the origin will be used.",
            "type": {
              "kind": "ENUM",
              "name": "StreetMode",
              "ofType": null
            },
            "defaultValue": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transportModes",
            "description": "The allowed modes for the transit part of the trip. Use an empty list to disallow transit for this search. If the element is not present or null, it will default to all transport modes.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "TransportModes",
                "ofType": null
              }
            },
            "defaultValue": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "MultiModalMode",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "all",
            "description": "Both multiModal parents and their mono modal child stop places.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "child",
            "description": "Only mono modal children stop places, not their multi modal parent stop",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "parent",
            "description": "Multi modal parent stop places without their mono modal children.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "MultilingualString",
        "description": "Text with language",
        "fields": [
          {
            "name": "language",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "value",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Notice",
        "description": null,
        "fields": [
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicCode",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "text",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "OccupancyStatus",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "fewSeatsAvailable",
            "description": "The vehicle or carriage has a few seats available.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "full",
            "description": "The vehicle or carriage is considered full by most measures, but may still be allowing passengers to board.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "manySeatsAvailable",
            "description": "The vehicle or carriage has a large number of seats available.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "noData",
            "description": "The vehicle or carriage doesn't have any occupancy data available.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "notAcceptingPassengers",
            "description": "The vehicle or carriage has no seats or standing room available.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "standingRoomOnly",
            "description": "The vehicle or carriage only has standing room available.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Operator",
        "description": "Organisation providing public transport services.",
        "fields": [
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lines",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Line",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "phone",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "serviceJourney",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ServiceJourney",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "url",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "PageInfo",
        "description": "Information about pagination in a connection.",
        "fields": [
          {
            "name": "endCursor",
            "description": "When paginating forwards, the cursor to continue.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "hasNextPage",
            "description": "When paginating forwards, are there more items?",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "hasPreviousPage",
            "description": "When paginating backwards, are there more items?",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "startCursor",
            "description": "When paginating backwards, the cursor to continue.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "PathGuidance",
        "description": "A series of turn by turn instructions used for walking, biking and driving.",
        "fields": [
          {
            "name": "area",
            "description": "This step is on an open area, such as a plaza or train platform, and thus the directions should say something like \"cross\"",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bogusName",
            "description": "The name of this street was generated by the system, so we should only display it once, and generally just display right/left directions",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "distance",
            "description": "The distance in meters that this step takes.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "exit",
            "description": "When exiting a highway or traffic circle, the exit name/number.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "heading",
            "description": "The absolute direction of this step.",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "AbsoluteDirection",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "latitude",
            "description": "The latitude of the step.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "longitude",
            "description": "The longitude of the step.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "relativeDirection",
            "description": "The relative direction of this step.",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "RelativeDirection",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stayOn",
            "description": "Indicates whether or not a street changes direction at an intersection.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "streetName",
            "description": "The name of the street.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Place",
        "description": "Common super class for all places (stop places, quays, car parks, bike parks and bike rental stations )",
        "fields": [
          {
            "name": "bikeRentalStation",
            "description": "The bike rental station related to the place",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "BikeRentalStation",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "flexibleArea",
            "description": "The flexible area related to the place.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Coordinates",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "latitude",
            "description": "The latitude of the place.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "longitude",
            "description": "The longitude of the place.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": "For transit quays, the name of the quay. For points of interest, the name of the POI.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "quay",
            "description": "The quay related to the place.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Quay",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "rentalVehicle",
            "description": "The rental vehicle related to the place",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "RentalVehicle",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "vertexType",
            "description": "Type of vertex. (Normal, Bike sharing station, Bike P+R, Transit quay) Mostly used for better localization of bike sharing and P+R station names",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "VertexType",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "PlaceAtDistance",
        "description": null,
        "fields": [
          {
            "name": "distance",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": true,
            "deprecationReason": "Id is not referable or meaningful and will be removed"
          },
          {
            "name": "place",
            "description": null,
            "args": [],
            "type": {
              "kind": "INTERFACE",
              "name": "PlaceInterface",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INTERFACE",
        "name": "PlaceInterface",
        "description": "Interface for places, i.e. quays, stop places, parks",
        "fields": [
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "latitude",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "longitude",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": [
          {
            "kind": "OBJECT",
            "name": "BikePark",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "BikeRentalStation",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "Quay",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "RentalVehicle",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "StopPlace",
            "ofType": null
          }
        ]
      },
      {
        "kind": "OBJECT",
        "name": "PointsOnLink",
        "description": "A list of coordinates encoded as a polyline string (see http://code.google.com/apis/maps/documentation/polylinealgorithm.html)",
        "fields": [
          {
            "name": "length",
            "description": "The number of points in the string",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "points",
            "description": "The encoded points of the polyline. Be aware that the string could contain escape characters that need to be accounted for. (https://www.freeformatter.com/javascript-escape.html)",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Presentation",
        "description": "Types describing common presentation properties",
        "fields": [
          {
            "name": "colour",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "textColour",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "PtSituationElement",
        "description": "Simple public transport situation element",
        "fields": [
          {
            "name": "advice",
            "description": "Advice of situation in all different translations available",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "MultilingualString",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "authority",
            "description": "Get affected authority for this situation element",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Authority",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": "Description of situation in all different translations available",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "MultilingualString",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "infoLinks",
            "description": "Optional links to more information.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "infoLink",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lines",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Line",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "priority",
            "description": "Priority of this situation ",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "quays",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Quay",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "reportAuthority",
            "description": "Authority that reported this situation",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Authority",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "Not yet officially supported. May be removed or renamed."
          },
          {
            "name": "reportType",
            "description": "ReportType of this situation",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "ReportType",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "serviceJourneys",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ServiceJourney",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "severity",
            "description": "Severity of this situation ",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "Severity",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "situationNumber",
            "description": "Operator's internal id for this situation",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "summary",
            "description": "Summary of situation in all different translations available",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "MultilingualString",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "validityPeriod",
            "description": "Period this situation is in effect",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "ValidityPeriod",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "PurchaseWhen",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "advanceAndDayOfTravel",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dayOfTravelOnly",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "other",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "timeOfTravelOnly",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "untilPreviousDay",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Quay",
        "description": "A place such as platform, stance, or quayside where passengers have access to PT vehicles.",
        "fields": [
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "estimatedCalls",
            "description": "List of visits to this quay as part of vehicle journeys.",
            "args": [
              {
                "name": "arrivalDeparture",
                "description": "Filters results by either departures, arrivals or both. For departures forBoarding has to be true and the departure time has to be within the specified time range. For arrivals, forAlight has to be true and the arrival time has to be within the specified time range. If both are asked for, either the conditions for arrivals or the conditions for departures will have to be true for an EstimatedCall to show.",
                "type": {
                  "kind": "ENUM",
                  "name": "ArrivalDeparture",
                  "ofType": null
                },
                "defaultValue": "departures",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "includeCancelledTrips",
                "description": "Indicates that realtime-cancelled trips should also be included. NOT IMPLEMENTED",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "numberOfDepartures",
                "description": "Limit the total number of departures returned.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "5",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "numberOfDeparturesPerLineAndDestinationDisplay",
                "description": "Limit the number of departures per line and destination display returned. The parameter is only applied when the value is between 1 and 'numberOfDepartures'.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "startTime",
                "description": "DateTime for when to fetch estimated calls from. Default value is current time",
                "type": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "timeRange",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "86400",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "whiteListed",
                "description": "Parameters for indicating the only authorities and/or lines or quays to list estimatedCalls for",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "InputWhiteListed",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "whiteListedModes",
                "description": "Only show estimated calls for selected modes.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "TransportMode",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "EstimatedCall",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "flexibleArea",
            "description": "Geometry for flexible area.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Coordinates",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "flexibleGroup",
            "description": "the Quays part of an flexible group.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Quay",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "journeyPatterns",
            "description": "List of journey patterns servicing this quay",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "JourneyPattern",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "latitude",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lines",
            "description": "List of lines servicing this quay",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Line",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "longitude",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": null,
            "args": [
              {
                "name": "lang",
                "description": "Fetch the name in the language given. The language should be represented as a ISO-639 language code. If the translation does not exits, the default name is returned.",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicCode",
            "description": "Public code used to identify this quay within the stop place. For instance a platform code.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "situations",
            "description": "Get all situations active for the quay.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "PtSituationElement",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stopPlace",
            "description": "The stop place to which this quay belongs to.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "StopPlace",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stopType",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tariffZones",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "TariffZone",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "timeZone",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "wheelchairAccessible",
            "description": "Whether this quay is suitable for wheelchair boarding.",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "WheelchairBoarding",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "PlaceInterface",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "QuayAtDistance",
        "description": null,
        "fields": [
          {
            "name": "distance",
            "description": "The distance in meters to the given quay.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "quay",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Quay",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "QueryType",
        "description": null,
        "fields": [
          {
            "name": "authorities",
            "description": "Get all authorities",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Authority",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "authority",
            "description": "Get an authority by ID",
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Authority",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikePark",
            "description": "Get a single bike park based on its id",
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "BikePark",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeParks",
            "description": "Get all bike parks",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "BikePark",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeRentalStation",
            "description": "Get all bike rental stations",
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "BikeRentalStation",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeRentalStations",
            "description": "Get all bike rental stations",
            "args": [
              {
                "name": "ids",
                "description": null,
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "BikeRentalStation",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeRentalStationsByBbox",
            "description": "Get all bike rental stations within the specified bounding box.",
            "args": [
              {
                "name": "maximumLatitude",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "maximumLongitude",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "minimumLatitude",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "minimumLongitude",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "BikeRentalStation",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "datedServiceJourney",
            "description": "Get a single dated service journey based on its id",
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DatedServiceJourney",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "datedServiceJourneys",
            "description": "Get all dated service journeys, matching the filters",
            "args": [
              {
                "name": "alterations",
                "description": null,
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "ServiceAlteration",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "authorities",
                "description": null,
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "lines",
                "description": null,
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "operatingDays",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "Date",
                        "ofType": null
                      }
                    }
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "privateCodes",
                "description": null,
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "replacementFor",
                "description": "Get all DatedServiceJourneys, which are replacing any of the given DatedServiceJourneys ids",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "serviceJourneys",
                "description": null,
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "DatedServiceJourney",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "groupOfLines",
            "description": "Get a single group of lines based on its id",
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "GroupOfLines",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "groupsOfLines",
            "description": "Get all groups of lines",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "GroupOfLines",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "leg",
            "description": "Refetch a single leg based on its id",
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ID",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Leg",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "line",
            "description": "Get a single line based on its id",
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ID",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Line",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lines",
            "description": "Get all lines",
            "args": [
              {
                "name": "authorities",
                "description": "Set of ids of authorities to fetch lines for.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "flexibleOnly",
                "description": "Filter by lines containing flexible / on demand serviceJourneys only.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "ids",
                "description": null,
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ID",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "name",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "publicCode",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "publicCodes",
                "description": null,
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "transportModes",
                "description": null,
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "TransportMode",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Line",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nearest",
            "description": "Get all places (quays, stop places, car parks etc. with coordinates) within the specified radius from a location. The returned type has two fields place and distance. The search is done by walking so the distance is according to the network of walkables.",
            "args": [
              {
                "name": "after",
                "description": "fetching only nodes after this node (exclusive)",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "before",
                "description": "fetching only nodes before this node (exclusive)",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "filterByIds",
                "description": "Only include places that match one of the given ids.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "InputPlaceIds",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "filterByInUse",
                "description": "Only affects queries for quays and stop places. If true only quays and stop places with at least one visiting line are included.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "filterByModes",
                "description": "Only include places that include this mode. Only checked for places with mode i.e. quays, departures.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "TransportMode",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "filterByPlaceTypes",
                "description": "Only include places of given types if set. Default accepts all types",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "FilterPlaceType",
                    "ofType": null
                  }
                },
                "defaultValue": "[quay, stopPlace, bicycleRent, bikePark, carPark]",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "first",
                "description": "fetching only the first certain number of nodes",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "last",
                "description": "fetching only the last certain number of nodes",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "latitude",
                "description": "Latitude of the location",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "longitude",
                "description": "Longitude of the location",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "maximumDistance",
                "description": "Maximum distance (in meters) to search for from the specified location. Default is 2000m.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                "defaultValue": "2000",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "maximumResults",
                "description": "Maximum number of results. Search is stopped when this limit is reached. Default is 20.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "20",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "multiModalMode",
                "description": "MultiModalMode for query. To control whether multi modal parent stop places, their mono modal children or both are included in the response. Does not affect mono modal stop places that do not belong to a multi modal stop place. Only applicable for placeType StopPlace",
                "type": {
                  "kind": "ENUM",
                  "name": "MultiModalMode",
                  "ofType": null
                },
                "defaultValue": "parent",
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "placeAtDistanceConnection",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "operator",
            "description": "Get a operator by ID",
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Operator",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "operators",
            "description": "Get all operators",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Operator",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "quay",
            "description": "Get a single quay based on its id)",
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Quay",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "quays",
            "description": "Get all quays",
            "args": [
              {
                "name": "ids",
                "description": null,
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "name",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Quay",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "quaysByBbox",
            "description": "Get all quays within the specified bounding box",
            "args": [
              {
                "name": "authority",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "filterByInUse",
                "description": "If true only quays with at least one visiting line are included.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "maximumLatitude",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "maximumLongitude",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "minimumLatitude",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "minimumLongitude",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Quay",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "quaysByRadius",
            "description": "Get all quays within the specified walking radius from a location. The returned type has two fields quay and distance",
            "args": [
              {
                "name": "after",
                "description": "fetching only nodes after this node (exclusive)",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "authority",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "before",
                "description": "fetching only nodes before this node (exclusive)",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "first",
                "description": "fetching only the first certain number of nodes",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "last",
                "description": "fetching only the last certain number of nodes",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "latitude",
                "description": "Latitude of the location",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "longitude",
                "description": "Longitude of the location",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "radius",
                "description": "Radius via streets (in meters) to search for from the specified location",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "quayAtDistanceConnection",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "routingParameters",
            "description": "Get default routing parameters.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "RoutingParameters",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "serverInfo",
            "description": "Get OTP server information",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "ServerInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "serviceJourney",
            "description": "Get a single service journey based on its id",
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "ServiceJourney",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "serviceJourneys",
            "description": "Get all service journeys",
            "args": [
              {
                "name": "activeDates",
                "description": "Set of ids of active dates to fetch serviceJourneys for.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Date",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "authorities",
                "description": "Set of ids of authorities to fetch serviceJourneys for.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "lines",
                "description": "Set of ids of lines to fetch serviceJourneys for.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ID",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "privateCodes",
                "description": "Set of ids of private codes to fetch serviceJourneys for.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ServiceJourney",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "situation",
            "description": "Get a single situation based on its situationNumber",
            "args": [
              {
                "name": "situationNumber",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "PtSituationElement",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "situations",
            "description": "Get all active situations.",
            "args": [
              {
                "name": "authorities",
                "description": "Filter by reporting authorities.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "severities",
                "description": "Filter by severity.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "Severity",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "PtSituationElement",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stopPlace",
            "description": "Get a single stopPlace based on its id)",
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "StopPlace",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stopPlaces",
            "description": "Get all stopPlaces",
            "args": [
              {
                "name": "ids",
                "description": null,
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "StopPlace",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stopPlacesByBbox",
            "description": "Get all stop places within the specified bounding box",
            "args": [
              {
                "name": "authority",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "filterByInUse",
                "description": "If true only stop places with at least one visiting line are included.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "maximumLatitude",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "maximumLongitude",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "minimumLatitude",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "minimumLongitude",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "multiModalMode",
                "description": "MultiModalMode for query. To control whether multi modal parent stop places, their mono modal children or both are included in the response. Does not affect mono modal stop places that do not belong to a multi modal stop place.",
                "type": {
                  "kind": "ENUM",
                  "name": "MultiModalMode",
                  "ofType": null
                },
                "defaultValue": "parent",
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "StopPlace",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "trip",
            "description": "Input type for executing a travel search for a trip between two locations. Returns trip patterns describing suggested alternatives for the trip.",
            "args": [
              {
                "name": "alightSlackDefault",
                "description": "The alightSlack is the minimum extra time after exiting a public transport vehicle. This is the default value used, if not overridden by the 'alightSlackList'.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "0",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "alightSlackList",
                "description": "List of alightSlack for a given set of modes. Defaults: [air : PT15M]",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "TransportModeSlack",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "arriveBy",
                "description": "Whether the trip should depart at dateTime (false, the default), or arrive at dateTime. See `timetableView` for use-cases where this parameter is relevant.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "banned",
                "description": "Parameters for indicating authorities, lines or quays not be used in the trip patterns",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "InputBanned",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "bicycleOptimisationMethod",
                "description": "The set of characteristics that the user wants to optimise for during bicycle searches -- defaults to safe",
                "type": {
                  "kind": "ENUM",
                  "name": "BicycleOptimisationMethod",
                  "ofType": null
                },
                "defaultValue": "safe",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "bikeSpeed",
                "description": "The maximum bike speed along streets, in meters per second",
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": "5",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "boardSlackDefault",
                "description": "The boardSlack is the minimum extra time to board a public transport vehicle. This is the same as the 'minimumTransferTime', except that this also apply to to the first transit leg in the trip. This is the default value used, if not overridden by the 'boardSlackList'.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "0",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "boardSlackList",
                "description": "List of boardSlack for a given set of modes. Defaults: [air : PT35M]",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "TransportModeSlack",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "dateTime",
                "description": "Date and time for the earliest time the user is willing to start the journey (if arriveBy=false/not set) or the latest acceptable time of arriving (arriveBy=true). Defaults to now",
                "type": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "debugItineraryFilter",
                "description": "Debug the itinerary-filter-chain. OTP will attach a system notice to itineraries instead of removing them. This is very convenient when tuning the filters.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "extraSearchCoachReluctance",
                "description": "FOR TESTING ONLY",
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "from",
                "description": "The start location",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "Location",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "ignoreRealtimeUpdates",
                "description": "When true, realtime updates are ignored during this search.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "includePlannedCancellations",
                "description": "When true, service journeys cancelled in scheduled route data will be included during this search.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "itineraryFilters",
                "description": "Configure the itinerary-filter-chain. NOTE! THESE PARAMETERS ARE USED FOR SERVER-SIDE TUNING AND IS AVAILABLE HERE FOR TESTING ONLY.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "ItineraryFilters",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "locale",
                "description": "The preferable language to use for text targeted the end user. Note! The data quality is limited, only stop and quay names are translates, and not in all places of the API.",
                "type": {
                  "kind": "ENUM",
                  "name": "Locale",
                  "ofType": null
                },
                "defaultValue": "no",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "maximumTransfers",
                "description": "Maximum number of transfers. Note! The best way to reduce the number of transfers is to set the `transferPenalty` parameter.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "12",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "modes",
                "description": "The set of access/egress/direct/transit modes to be used for this search. Note that this only works at the Line level. If individual ServiceJourneys have modes that differ from the Line mode, this will NOT be accounted for.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "Modes",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "numTripPatterns",
                "description": "The maximum number of trip patterns to return. Note! This reduce the number of trip patterns AFTER the OTP travel search is done in a post-filtering process. There is little performance gain in reducing the number of trip patterns returned. The post-filtering will reduce the number of trip-patterns down to this size. It does not make the search faster, as it did in OTP1. See also the trip meta-data on how to implement paging.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "12",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "pageCursor",
                "description": "Use the cursor to go to the next \"page\" of itineraries. Copy the cursor from the last response and keep the original request as is. This will enable you to search for itineraries in the next or previous time-window.",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "searchWindow",
                "description": "The length of the search-window in minutes. This parameter is optional.\n\nThe search-window is defined as the duration between the earliest-departure-time(EDT) and the latest-departure-time(LDT). OTP will search for all itineraries in this departure window. If `arriveBy=true` the `dateTime` parameter is the latest-arrival-time, so OTP will dynamically calculate the EDT. Using a short search-window is faster than using a longer one, but the search duration is not linear. Using a \"too\" short search-window will waste resources server side, while using a search-window that is too long will be slow.\n\nOTP will dynamically calculate a reasonable value for the search-window, if not provided. The calculation comes with a significant overhead (10-20% extra). Whether you should use the dynamic calculated value or pass in a value depends on your use-case. For a travel planner in a small geographical area, with a dense network of public transportation, a fixed value between 40 minutes and 2 hours makes sense. To find the appropriate search-window, adjust it so that the number of itineraries on average is around the wanted `numItineraries`. Make sure you set the `numItineraries` to a high number while testing. For a country wide area like Norway, using the dynamic search-window is the best.\n\nWhen paginating, the search-window is calculated using the `numItineraries` in the original search together with statistics from the search for the last page. This behaviour is configured server side, and can not be overridden from the client.\n\nThe search-window used is returned to the response metadata as `searchWindowUsed` for debugging purposes.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "timetableView",
                "description": "Search for the best trip options within a time window. If `true` two TripPatterns are considered optimal if one is better on arrival time(earliest wins) and the other is better on departure time(latest wins).In combination with `arriveBy` this parameter cover the following 3 use cases:\n\n\n  - Traveler want to find the best alternative within a time window. Set     `timetableView=true` and `arriveBy=false`. This is the default, and if     the intention of the traveler is unknown it gives the best result,     because it includes the two next use-cases. This option also work well     with paging. Setting the `arriveBy=true`, covers the same use-case, but     the input time is interpreted as latest-arrival-time, and not     earliest-departure-time.\n\n  - Traveler want to find the best alternative with departure after a     specific time. For example: I am at the station now and want to get     home as quickly as possible. Set `timetableView=false` and     `arriveBy=false`. Do not support paging.\n\n  - Traveler want to find the best alternative with arrival before a    specific time. For example going to a meeting. Set `timetableView=false`     and `arriveBy=true`. Do not support paging.\n\nDefault: `true`",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "to",
                "description": "The end location",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "Location",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "transferPenalty",
                "description": "An extra penalty added on transfers (i.e. all boardings except the first one). The transferPenalty is used when a user requests even less transfers. In the latter case, we don't actually optimise for fewest transfers, as this can lead to absurd results. Consider a trip in New York from Grand Army Plaza (the one in Brooklyn) to Kalustyan's at noon. The true lowest transfers trip pattern is to wait until midnight, when the 4 train runs local the whole way. The actual fastest trip pattern is the 2/3 to the 4/5 at Nevins to the 6 at Union Square, which takes half an hour. Even someone optimise for fewest transfers doesn't want to wait until midnight. Maybe they would be willing to walk to 7th Ave and take the Q to Union Square, then transfer to the 6. If this takes less than transferPenalty seconds, then that's what we'll return.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "0",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "transferSlack",
                "description": "An expected transfer time (in seconds) that specifies the amount of time that must pass between exiting one public transport vehicle and boarding another. This time is in addition to time it might take to walk between stops.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "120",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "triangleFactors",
                "description": "When setting the BicycleOptimisationMethod to 'triangle', use these values to tell the routing engine how important each of the factors is compared to the others. All values should add up to 1.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "TriangleFactors",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "useBikeRentalAvailabilityInformation",
                "description": "Whether or not bike rental availability information will be used to plan bike rental trips.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "waitReluctance",
                "description": "Wait cost is multiplied by this value. Setting this to a value lower than 1 indicates that waiting is better than staying on a vehicle. This should never be set higher than walkReluctance, since that would lead to walking down a line to avoid waiting.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": "1",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "walkReluctance",
                "description": "Walk cost is multiplied by this value. This is the main parameter to use for limiting walking.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": "4",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "walkSpeed",
                "description": "The maximum walk speed along streets, in meters per second.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": "1.3",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "wheelchairAccessible",
                "description": "Whether the trip must be wheelchair accessible. Supported for the street part to the search, not implemented for the transit jet.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "whiteListed",
                "description": "Parameters for indicating the only authorities, lines or quays to be used in the trip patterns",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "InputWhiteListed",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Trip",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "RealtimeState",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "Added",
            "description": "The service journey has been added using a real-time update, i.e. the service journey was not present in the regular time table.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "canceled",
            "description": "The service journey has been canceled by a real-time update.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "modified",
            "description": "The service journey information has been updated and resulted in a different journey pattern compared to the journey pattern of the scheduled service journey.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "scheduled",
            "description": "The service journey information comes from the regular time table, i.e. no real-time update has been applied.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updated",
            "description": "The service journey information has been updated, but the journey pattern stayed the same as the journey pattern of the scheduled service journey.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "RelativeDirection",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "circleClockwise",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "circleCounterclockwise",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "continue",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "depart",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "elevator",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "hardLeft",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "hardRight",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "left",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "right",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "slightlyLeft",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "slightlyRight",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "uturnLeft",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "uturnRight",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "RentalVehicle",
        "description": null,
        "fields": [
          {
            "name": "currentRangeMeters",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "latitude",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "longitude",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "network",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "vehicleType",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "RentalVehicleType",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "PlaceInterface",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "RentalVehicleType",
        "description": null,
        "fields": [
          {
            "name": "formFactor",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "maxRangeMeters",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "propulsionType",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "vehicleTypeId",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "ReportType",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "general",
            "description": "Indicates a general info-message that should not affect trip.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "incident",
            "description": "Indicates an incident that may affect trip.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "RoutingError",
        "description": "Description of the reason, why the planner did not return any results",
        "fields": [
          {
            "name": "code",
            "description": "An enum describing the reason",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "ENUM",
                "name": "RoutingErrorCode",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": "A textual description of why the search failed. The clients are expected to have their own translations based on the code, for user visible error messages.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "inputField",
            "description": "An enum describing the field which should be changed, in order for the search to succeed",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "InputField",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "RoutingErrorCode",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "locationNotFound",
            "description": "The specified location is not close to any streets or transit stops",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "noStopsInRange",
            "description": "No stops are reachable from the location specified. You can try searching using a different access or egress mode",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "noTransitConnection",
            "description": "No transit connection was found between the origin and destination withing the operating day or the next day",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "noTransitConnectionInSearchWindow",
            "description": "Transit connection was found, but it was outside the search window, see metadata for the next search window",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "outsideBounds",
            "description": "The coordinates are outside the bounds of the data currently loaded into the system",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "outsideServicePeriod",
            "description": "The date specified is outside the range of data currently loaded into the system",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "systemError",
            "description": "An unknown error happened during the search. The details have been logged to the server logs",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "walkingBetterThanTransit",
            "description": "The origin and destination are so close to each other, that walking is always better, but no direct mode was specified for the search",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "RoutingParameters",
        "description": "The default parameters used in travel searches.",
        "fields": [
          {
            "name": "alightSlackDefault",
            "description": "The alightSlack is the minimum extra time after exiting a public transport vehicle. This is the default value used, if not overridden by the 'alightSlackList'.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "alightSlackList",
            "description": "List of alightSlack for a given set of modes.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "TransportModeSlackType",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "allowBikeRental",
            "description": "",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "Rental is specified by modes"
          },
          {
            "name": "bikeBoardCost",
            "description": "Separate cost for boarding a vehicle with a bicycle, which is more difficult than on foot.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeParkCost",
            "description": "Cost to park a bike.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeParkTime",
            "description": "Time to park a bike.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeRentalDropOffCost",
            "description": "Cost to drop-off a rented bike.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeRentalDropOffTime",
            "description": "Time to drop-off a rented bike.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeRentalPickupCost",
            "description": "Cost to rent a bike.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeRentalPickupTime",
            "description": "Time to rent a bike.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeSpeed",
            "description": "Max bike speed along streets, in meters per second",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "boardSlackDefault",
            "description": "The boardSlack is the minimum extra time to board a public transport vehicle. This is the same as the 'minimumTransferTime', except that this also apply to to the first transit leg in the trip. This is the default value used, if not overridden by the 'boardSlackList'.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "boardSlackList",
            "description": "List of boardSlack for a given set of modes.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "TransportModeSlackType",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "carAccelerationSpeed",
            "description": "The acceleration speed of an automobile, in meters per second per second.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "carDecelerationSpeed",
            "description": "The deceleration speed of an automobile, in meters per second per second.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "carDropOffTime",
            "description": "Time to park a car in a park and ride, w/o taking into account driving and walking cost.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "carSpeed",
            "description": "Max car speed along streets, in meters per second",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "compactLegsByReversedSearch",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "NOT IN USE IN OTP2."
          },
          {
            "name": "debugItineraryFilter",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "disableAlertFiltering",
            "description": "Option to disable the default filtering of GTFS-RT alerts by time.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "This is not supported!"
          },
          {
            "name": "disableRemainingWeightHeuristic",
            "description": "If true, the remaining weight heuristic is disabled.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "elevatorBoardCost",
            "description": "What is the cost of boarding a elevator?",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "elevatorBoardTime",
            "description": "How long does it take to get on an elevator, on average.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "elevatorHopCost",
            "description": "What is the cost of travelling one floor on an elevator?",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "elevatorHopTime",
            "description": "How long does it take to advance one floor on an elevator?",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "geoIdElevation",
            "description": "Whether to apply the ellipsoid->geoid offset to all elevations in the response.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ignoreRealTimeUpdates",
            "description": "When true, realtime updates are ignored during this search.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "includedPlannedCancellations",
            "description": "When true, service journeys cancelled in scheduled route data will be included during this search.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "kissAndRide",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "Parking is specified by modes"
          },
          {
            "name": "maxDirectStreetDuration",
            "description": "This is the maximum duration in seconds for a direct street search. This is a performance limit and should therefore be set high. Use filters to limit what is presented to the client.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "maxSlope",
            "description": "The maximum slope of streets for wheelchair trips.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "maxTransfers",
            "description": "Maximum number of transfers returned in a trip plan.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "numItineraries",
            "description": "The maximum number of itineraries to return.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "onlyTransitTrips",
            "description": "Accept only paths that use transit (no street-only paths).",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "This is replaced by modes input object"
          },
          {
            "name": "otherThanPreferredRoutesPenalty",
            "description": "Penalty added for using every route that is not preferred if user set any route as preferred. We return number of seconds that we are willing to wait for preferred route.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "parkAndRide",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "Parking is specified by modes"
          },
          {
            "name": "reverseOptimizeOnTheFly",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "NOT IN USE IN OTP2."
          },
          {
            "name": "showIntermediateStops",
            "description": "Whether the planner should return intermediate stops lists for transit legs.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "This parameter is always enabled"
          },
          {
            "name": "stairsReluctance",
            "description": "Used instead of walkReluctance for stairs.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transferPenalty",
            "description": "An extra penalty added on transfers (i.e. all boardings except the first one).",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transferSlack",
            "description": "A global minimum transfer time (in seconds) that specifies the minimum amount of time that must pass between exiting one transit vehicle and boarding another.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "turnReluctance",
            "description": "Multiplicative factor on expected turning time.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "waitReluctance",
            "description": "How much worse is waiting for a transit vehicle than being on a transit vehicle, as a multiplier.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "walkBoardCost",
            "description": "This prevents unnecessary transfers by adding a cost for boarding a vehicle.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "walkReluctance",
            "description": "A multiplier for how bad walking is, compared to being in transit for equal lengths of time.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "walkSpeed",
            "description": "Max walk speed along streets, in meters per second",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "wheelChairAccessible",
            "description": "Whether the trip must be wheelchair accessible.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "ServerInfo",
        "description": null,
        "fields": [
          {
            "name": "buildConfigVersion",
            "description": "The 'configVersion' of the build-config.json file.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "buildTime",
            "description": "OTP Build timestamp",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "gitBranch",
            "description": "",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "gitCommit",
            "description": "",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "gitCommitTime",
            "description": "",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "otpConfigVersion",
            "description": "The 'configVersion' of the otp-config.json file.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "otpSerializationVersionId",
            "description": "The otp-serialization-version-id used to check graphs for compatibility with current version of OTP.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "routerConfigVersion",
            "description": "The 'configVersion' of the router-config.json file.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "version",
            "description": "Maven version",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "ServiceAlteration",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "cancellation",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "extraJourney",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "planned",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "replaced",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "ServiceJourney",
        "description": "A planned vehicle journey with passengers.",
        "fields": [
          {
            "name": "activeDates",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Date",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikesAllowed",
            "description": "Whether bikes are allowed on service journey.",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "BikesAllowed",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bookingArrangements",
            "description": "Booking arrangements for flexible services.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "BookingArrangement",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "BookingArrangements are defined per stop, and can be found under `passingTimes` or `estimatedCalls`"
          },
          {
            "name": "directionType",
            "description": null,
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "DirectionType",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "estimatedCalls",
            "description": "Returns scheduled passingTimes for this ServiceJourney for a given date, updated with realtime-updates (if available). NB! This takes a date as argument (default=today) and returns estimatedCalls for that date and should only be used if the date is known when creating the request. For fetching estimatedCalls for a given trip.leg, use leg.serviceJourneyEstimatedCalls instead.",
            "args": [
              {
                "name": "date",
                "description": "Date to get estimated calls for. Defaults to today.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Date",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "EstimatedCall",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "journeyPattern",
            "description": "JourneyPattern for the service journey, according to scheduled data. If the ServiceJourney is not included in the scheduled data, null is returned.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "JourneyPattern",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "line",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Line",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "notices",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Notice",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "operator",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Operator",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "passingTimes",
            "description": "Returns scheduled passing times only - without realtime-updates, for realtime-data use 'estimatedCalls'",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "TimetabledPassingTime",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pointsOnLink",
            "description": "Detailed path travelled by service journey. Not available for flexible trips.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "PointsOnLink",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "privateCode",
            "description": "For internal use by operators.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicCode",
            "description": "Publicly announced code for service journey, differentiating it from other service journeys for the same line.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "quays",
            "description": "Quays visited by service journey, according to scheduled data. If the ServiceJourney is not included in the scheduled data, an empty list is returned.",
            "args": [
              {
                "name": "first",
                "description": "Only fetch the first n quays on the service journey",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "last",
                "description": "Only fetch the last n quays on the service journey",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Quay",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "serviceAlteration",
            "description": null,
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "ServiceAlteration",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "The service journey alteration will be moved out of SJ and grouped together with the SJ and date. In Netex this new type is called DatedServiceJourney. We will create artificial DSJs for the old SJs."
          },
          {
            "name": "situations",
            "description": "Get all situations active for the service journey.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "PtSituationElement",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transportMode",
            "description": null,
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "TransportMode",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transportSubmode",
            "description": null,
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "TransportSubmode",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "wheelchairAccessible",
            "description": "Whether service journey is accessible with wheelchair.",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "WheelchairBoarding",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "Severity",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "noImpact",
            "description": "Situation has no impact on trips.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "normal",
            "description": "Situation has an impact on trips (default).",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "severe",
            "description": "Situation has a severe impact on trips.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "slight",
            "description": "Situation has a slight impact on trips.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "undefined",
            "description": "Severity is undefined.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "unknown",
            "description": "Situation has unknown impact on trips.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "verySevere",
            "description": "Situation has a very severe impact on trips.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "verySlight",
            "description": "Situation has a very slight impact on trips.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "StopPlace",
        "description": "Named place where public transport may be accessed. May be a building complex (e.g. a station) or an on-street location.",
        "fields": [
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "estimatedCalls",
            "description": "List of visits to this stop place as part of vehicle journeys.",
            "args": [
              {
                "name": "arrivalDeparture",
                "description": null,
                "type": {
                  "kind": "ENUM",
                  "name": "ArrivalDeparture",
                  "ofType": null
                },
                "defaultValue": "departures",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "includeCancelledTrips",
                "description": "Indicates that realtime-cancelled trips should also be included. NOT IMPLEMENTED",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "numberOfDepartures",
                "description": "Limit the total number of departures returned.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "5",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "numberOfDeparturesPerLineAndDestinationDisplay",
                "description": "Limit the number of departures per line and destination display returned. The parameter is only applied when the value is between 1 and 'numberOfDepartures'.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "startTime",
                "description": "DateTime for when to fetch estimated calls from. Default value is current time",
                "type": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "timeRange",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "86400",
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "whiteListed",
                "description": "Parameters for indicating the only authorities and/or lines or quays to list estimatedCalls for",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "InputWhiteListed",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              },
              {
                "name": "whiteListedModes",
                "description": "Only show estimated calls for selected modes.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "TransportMode",
                    "ofType": null
                  }
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "EstimatedCall",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "latitude",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "longitude",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": null,
            "args": [
              {
                "name": "lang",
                "description": "Fetch the name in the language given. The language should be represented as a ISO-639 language code. If the translation does not exits, the default name is returned.",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "parent",
            "description": "Returns parent stop for this stop",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "StopPlace",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "quays",
            "description": "Returns all quays that are children of this stop place",
            "args": [
              {
                "name": "filterByInUse",
                "description": "If true only quays with at least one visiting line are included.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false",
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Quay",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tariffZones",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "TariffZone",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "timeZone",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transportMode",
            "description": "The transport modes of quays under this stop place.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "ENUM",
                "name": "TransportMode",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transportSubmode",
            "description": "The transport submode serviced by this stop place.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "ENUM",
                "name": "TransportSubmode",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "weighting",
            "description": "Relative weighting of this stop with regards to interchanges. NOT IMPLEMENTED",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "InterchangeWeighting",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "PlaceInterface",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "StopToStopGeometry",
        "description": "List of coordinates between two stops as a polyline",
        "fields": [
          {
            "name": "fromQuay",
            "description": "Origin Quay",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Quay",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pointsOnLink",
            "description": "A list of coordinates encoded as a polyline string between two stops (see http://code.google.com/apis/maps/documentation/polylinealgorithm.html)",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "PointsOnLink",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "toQuay",
            "description": "Destination Quay",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Quay",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "StreetMode",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "bicycle",
            "description": "Bike only. This can be used as access/egress, but transfers will still be walk only.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bike_park",
            "description": "Bike to a bike parking area, then walk the rest of the way. Direct mode and access mode only.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bike_rental",
            "description": "Walk to a bike rental point, bike to a bike rental drop-off point, and walk the rest of the way. This can include bike rental at fixed locations or free-floating services.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "car",
            "description": "Car only. Direct mode only.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "car_park",
            "description": "Start in the car, drive to a parking area, and walk the rest of the way. Direct mode and access mode only.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "car_pickup",
            "description": "Walk to a pickup point along the road, drive to a drop-off point along the road, and walk the rest of the way. This can include various taxi-services or kiss & ride.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "flexible",
            "description": "Walk to an eligible pickup area for flexible transportation, ride to an eligible drop-off area and then walk the rest of the way.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "foot",
            "description": "Walk only",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "scooter_rental",
            "description": "Walk to a scooter rental point, ride a scooter to a scooter rental drop-off point, and walk the rest of the way. This can include scooter rental at fixed locations or free-floating services.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "String",
        "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "SystemNotice",
        "description": "A system notice is used to tag elements with system information for debugging or other system related purpose. One use-case is to run a routing search with 'itineraryFilters.debug: true'. This will then tag itineraries instead of removing them from the result. This make it possible to inspect the itinerary-filter-chain. A SystemNotice only have english text, because the primary user are technical staff, like testers and developers.",
        "fields": [
          {
            "name": "tag",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "text",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "TariffZone",
        "description": null,
        "fields": [
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Time",
        "description": "Time using the format: `HH:MM:SS`. Example: `18:25:43`",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "TimeAndDayOffset",
        "description": null,
        "fields": [
          {
            "name": "dayOffset",
            "description": "Number of days offset from base line time",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "time",
            "description": "Local time",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Time",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "TimetabledPassingTime",
        "description": "Scheduled passing times. These are not affected by real time updates.",
        "fields": [
          {
            "name": "arrival",
            "description": "Scheduled time of arrival at quay",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "TimeAndDayOffset",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bookingArrangements",
            "description": "Booking arrangements for this passing time.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "BookingArrangement",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "departure",
            "description": "Scheduled time of departure from quay",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "TimeAndDayOffset",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "destinationDisplay",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "DestinationDisplay",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "forAlighting",
            "description": "Whether vehicle may be alighted at quay.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "forBoarding",
            "description": "Whether vehicle may be boarded at quay.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "notices",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Notice",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "quay",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Quay",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "requestStop",
            "description": "Whether vehicle will only stop on request.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "serviceJourney",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "ServiceJourney",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "timingPoint",
            "description": "Whether this is a timing point or not. Boarding and alighting is not allowed at timing points.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "TransitGeneralizedCostFilterParams",
        "description": null,
        "fields": null,
        "inputFields": [
          {
            "name": "costLimitFunction",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "DoubleFunction",
                "ofType": null
              }
            },
            "defaultValue": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "intervalRelaxFactor",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            "defaultValue": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "TransportMode",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "air",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cableway",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "coach",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "funicular",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lift",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "metro",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "monorail",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "rail",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tram",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "trolleybus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "unknown",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "water",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "TransportModeSlack",
        "description": "Used to specify board and alight slack for a given modes.",
        "fields": null,
        "inputFields": [
          {
            "name": "modes",
            "description": "List of modes for which the given slack apply.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "TransportMode",
                    "ofType": null
                  }
                }
              }
            },
            "defaultValue": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "slack",
            "description": "The slack used for all given modes.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "defaultValue": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "TransportModeSlackType",
        "description": "Used to specify board and alight slack for a given modes.",
        "fields": [
          {
            "name": "modes",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "TransportMode",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "slack",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "TransportModes",
        "description": null,
        "fields": null,
        "inputFields": [
          {
            "name": "transportMode",
            "description": "A transportMode that should be allowed for this search. You can furthernarrow it down by specifying a list of transportSubModes",
            "type": {
              "kind": "ENUM",
              "name": "TransportMode",
              "ofType": null
            },
            "defaultValue": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transportSubModes",
            "description": "The allowed transportSubModes for this search. If this element is notpresent or null, it will default to all transportSubModes for the specifiedTransportMode. Be aware that all transportSubModes have an associated TransportMode, which must match what is specified in the transportMode field.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "ENUM",
                "name": "TransportSubmode",
                "ofType": null
              }
            },
            "defaultValue": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "TransportSubmode",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "SchengenAreaFlight",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "airportBoatLink",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "airportLinkBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "airportLinkRail",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "airshipService",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "allFunicularServices",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "allHireVehicles",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "allTaxiServices",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeTaxi",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "blackCab",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cableCar",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cableFerry",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "canalBarge",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "carTransportRailService",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "chairLift",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "charterTaxi",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cityTram",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "communalTaxi",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "commuterCoach",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "crossCountryRail",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dedicatedLaneBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "demandAndResponseBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "domesticCharterFlight",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "domesticFlight",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "domesticScheduledFlight",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dragLift",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "expressBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "funicular",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "helicopterService",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "highFrequencyBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "highSpeedPassengerService",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "highSpeedRail",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "highSpeedVehicleService",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "hireCar",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "hireCycle",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "hireMotorbike",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "hireVan",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "intercontinentalCharterFlight",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "intercontinentalFlight",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "international",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "internationalCarFerry",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "internationalCharterFlight",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "internationalCoach",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "internationalFlight",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "internationalPassengerFerry",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "interregionalRail",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lift",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "local",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "localBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "localCarFerry",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "localPassengerFerry",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "localTram",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "longDistance",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "metro",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "miniCab",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "mobilityBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "mobilityBusForRegisteredDisabled",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nationalCarFerry",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nationalCoach",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nationalPassengerFerry",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nightBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nightRail",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "postBoat",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "postBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "rackAndPinionRailway",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "railReplacementBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "railShuttle",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "railTaxi",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "regionalBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "regionalCarFerry",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "regionalCoach",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "regionalPassengerFerry",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "regionalRail",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "regionalTram",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "replacementRailService",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "riverBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "roadFerryLink",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "roundTripCharterFlight",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "scheduledFerry",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "schoolAndPublicServiceBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "schoolBoat",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "schoolBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "schoolCoach",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "shortHaulInternationalFlight",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "shuttleBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "shuttleCoach",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "shuttleFerryService",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "shuttleFlight",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "shuttleTram",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "sightseeingBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "sightseeingCoach",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "sightseeingFlight",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "sightseeingService",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "sightseeingTram",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "sleeperRailService",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "specialCoach",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "specialNeedsBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "specialTrain",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "streetCableCar",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "suburbanRailway",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "telecabin",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "telecabinLink",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "touristCoach",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "touristRailway",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "trainFerry",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "trainTram",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tube",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "undefined",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "undefinedFunicular",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "unknown",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "urbanRailway",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "waterTaxi",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "TriangleFactors",
        "description": "How much the factors safety, slope and distance are weighted relative to each other when routing bicycle legs. In total all three values need to add up to 1.",
        "fields": null,
        "inputFields": [
          {
            "name": "safety",
            "description": "How important is bicycle safety expressed as a fraction of 1.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            "defaultValue": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "slope",
            "description": "How important is slope/elevation expressed as a fraction of 1.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            "defaultValue": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "time",
            "description": "How important is time expressed as a fraction of 1. Note that what this really optimises for is distance (even if that means going over terrible surfaces, so I might be slower than the safe route).",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            "defaultValue": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Trip",
        "description": "Description of a travel between two places.",
        "fields": [
          {
            "name": "dateTime",
            "description": "The time and date of travel",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "DateTime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "debugOutput",
            "description": "Information about the timings for the trip generation",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "debugOutput",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "fromPlace",
            "description": "The origin",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Place",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "messageEnums",
            "description": "A list of possible error messages as enum",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            "isDeprecated": true,
            "deprecationReason": "Use routingErrors instead"
          },
          {
            "name": "messageStrings",
            "description": "A list of possible error messages in cleartext",
            "args": [
              {
                "name": "language",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null,
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            "isDeprecated": true,
            "deprecationReason": "Use routingErrors instead"
          },
          {
            "name": "metadata",
            "description": "The trip request metadata.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "TripSearchData",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nextPageCursor",
            "description": "Use the cursor to get the next page of results. Use this cursor for the pageCursor parameter in the trip query in order to get the next page.\nThe next page is a set of itineraries departing AFTER the last itinerary in this result.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "previousPageCursor",
            "description": "Use the cursor to get the previous page of results. Use this cursor for the pageCursor parameter in the trip query in order to get the previous page.\nThe previous page is a set of itineraries departing BEFORE the first itinerary in this result.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "routingErrors",
            "description": "A list of routing errors, and fields which caused them",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "RoutingError",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "toPlace",
            "description": "The destination",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Place",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tripPatterns",
            "description": "A list of possible trip patterns",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "TripPattern",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "TripPattern",
        "description": "List of legs constituting a suggested sequence of rides and links for a specific trip.",
        "fields": [
          {
            "name": "aimedEndTime",
            "description": "The aimed date and time the trip ends.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "aimedStartTime",
            "description": "The aimed date and time the trip starts.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "directDuration",
            "description": "NOT IMPLEMENTED.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Long",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "distance",
            "description": "Total distance for the trip, in meters. NOT IMPLEMENTED",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "duration",
            "description": "Duration of the trip, in seconds.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Long",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "endTime",
            "description": "Time that the trip arrives.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "DateTime",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "Replaced with expectedEndTime"
          },
          {
            "name": "expectedEndTime",
            "description": "The expected, realtime adjusted date and time the trip ends.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "expectedStartTime",
            "description": "The expected, realtime adjusted date and time the trip starts.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "generalizedCost",
            "description": "Generalized cost or weight of the itinerary. Used for debugging.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "legs",
            "description": "A list of legs. Each leg is either a walking (cycling, car) portion of the trip, or a ride leg on a particular vehicle. So a trip where the use walks to the Q train, transfers to the 6, then walks to their destination, has four legs.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Leg",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "startTime",
            "description": "Time that the trip departs.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "DateTime",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "Replaced with expectedStartTime"
          },
          {
            "name": "systemNotices",
            "description": "Get all system notices.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "SystemNotice",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transferPriorityCost",
            "description": "A cost calculated to favor transfer with higher priority. This field is meant for debugging only.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "waitTimeOptimizedCost",
            "description": "A cost calculated to distribute wait-time and avoid very short transfers. This field is meant for debugging only.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "waitingTime",
            "description": "How much time is spent waiting for transit to arrive, in seconds.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Long",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "walkDistance",
            "description": "How far the user has to walk, in meters.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "walkTime",
            "description": "How much time is spent walking, in seconds.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Long",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "TripSearchData",
        "description": "Trips search metadata.",
        "fields": [
          {
            "name": "nextDateTime",
            "description": "This is the suggested search time for the \"next page\" or time window. Insert it together with the 'searchWindowUsed' in the request to get a new set of trips following in the time-window AFTER the current search.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "DateTime",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "Use pageCursor instead"
          },
          {
            "name": "prevDateTime",
            "description": "This is the suggested search time for the \"previous page\" or time-window. Insert it together with the 'searchWindowUsed' in the request to get a new set of trips preceding in the time-window BEFORE the current search.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "DateTime",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "Use pageCursor instead"
          },
          {
            "name": "searchWindowUsed",
            "description": "This is the time window used by the raptor search. The input searchWindow is an optional parameter and is dynamically assigned if not set. OTP might override the value if it is too small or too large. When paging OTP adjusts it to the appropriate size, depending on the number of itineraries found in the current search window. The scaling of the search window ensures faster paging and limits resource usage. The unit is seconds.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "ValidityPeriod",
        "description": null,
        "fields": [
          {
            "name": "endTime",
            "description": "End of validity period. Will return 'null' if validity is open-ended.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "DateTime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "startTime",
            "description": "Start of validity period",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "DateTime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "VertexType",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "bikePark",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeShare",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "normal",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transit",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "WheelchairBoarding",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "noInformation",
            "description": "There is no accessibility information for the stopPlace/quay.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "notPossible",
            "description": "Wheelchair boarding/alighting is not possible at this stop.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "possible",
            "description": "Boarding wheelchair-accessible serviceJourneys is possible at this stopPlace/quay.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__Directive",
        "description": "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",
        "fields": [
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "isRepeatable",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "locations",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "__DirectiveLocation",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "args",
            "description": null,
            "args": [
              {
                "name": "includeDeprecated",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false",
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__InputValue",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "__DirectiveLocation",
        "description": "A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "QUERY",
            "description": "Location adjacent to a query operation.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "MUTATION",
            "description": "Location adjacent to a mutation operation.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "SUBSCRIPTION",
            "description": "Location adjacent to a subscription operation.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "FIELD",
            "description": "Location adjacent to a field.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "FRAGMENT_DEFINITION",
            "description": "Location adjacent to a fragment definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "FRAGMENT_SPREAD",
            "description": "Location adjacent to a fragment spread.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INLINE_FRAGMENT",
            "description": "Location adjacent to an inline fragment.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "VARIABLE_DEFINITION",
            "description": "Location adjacent to a variable definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "SCHEMA",
            "description": "Location adjacent to a schema definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "SCALAR",
            "description": "Location adjacent to a scalar definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "OBJECT",
            "description": "Location adjacent to an object type definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "FIELD_DEFINITION",
            "description": "Location adjacent to a field definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ARGUMENT_DEFINITION",
            "description": "Location adjacent to an argument definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INTERFACE",
            "description": "Location adjacent to an interface definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "UNION",
            "description": "Location adjacent to a union definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ENUM",
            "description": "Location adjacent to an enum definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ENUM_VALUE",
            "description": "Location adjacent to an enum value definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INPUT_OBJECT",
            "description": "Location adjacent to an input object type definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INPUT_FIELD_DEFINITION",
            "description": "Location adjacent to an input object field definition.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__EnumValue",
        "description": "One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",
        "fields": [
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "isDeprecated",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deprecationReason",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__Field",
        "description": "Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",
        "fields": [
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "args",
            "description": null,
            "args": [
              {
                "name": "includeDeprecated",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false",
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__InputValue",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "type",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "isDeprecated",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deprecationReason",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__InputValue",
        "description": "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",
        "fields": [
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "type",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "defaultValue",
            "description": "A GraphQL-formatted string representing the default value for this input value.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "isDeprecated",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deprecationReason",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__Schema",
        "description": "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",
        "fields": [
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "types",
            "description": "A list of all types supported by this server.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "queryType",
            "description": "The type that query operations will be rooted at.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "mutationType",
            "description": "If this server supports mutation, the type that mutation operations will be rooted at.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "__Type",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "subscriptionType",
            "description": "If this server support subscription, the type that subscription operations will be rooted at.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "__Type",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "directives",
            "description": "A list of all directives supported by this server.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Directive",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__Type",
        "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
        "fields": [
          {
            "name": "kind",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "ENUM",
                "name": "__TypeKind",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "specifiedByURL",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "fields",
            "description": null,
            "args": [
              {
                "name": "includeDeprecated",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false",
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Field",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "interfaces",
            "description": null,
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "possibleTypes",
            "description": null,
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "enumValues",
            "description": null,
            "args": [
              {
                "name": "includeDeprecated",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false",
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__EnumValue",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "inputFields",
            "description": null,
            "args": [
              {
                "name": "includeDeprecated",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false",
                "isDeprecated": false,
                "deprecationReason": null
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__InputValue",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ofType",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "__Type",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "__TypeKind",
        "description": "An enum describing what kind of type a given `__Type` is.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "SCALAR",
            "description": "Indicates this type is a scalar.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "OBJECT",
            "description": "Indicates this type is an object. `fields` and `interfaces` are valid fields.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INTERFACE",
            "description": "Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "UNION",
            "description": "Indicates this type is a union. `possibleTypes` is a valid field.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ENUM",
            "description": "Indicates this type is an enum. `enumValues` is a valid field.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INPUT_OBJECT",
            "description": "Indicates this type is an input object. `inputFields` is a valid field.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "LIST",
            "description": "Indicates this type is a list. `ofType` is a valid field.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "NON_NULL",
            "description": "Indicates this type is a non-null. `ofType` is a valid field.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "debugOutput",
        "description": null,
        "fields": [
          {
            "name": "totalTime",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Long",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "infoLink",
        "description": null,
        "fields": [
          {
            "name": "label",
            "description": "Label",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "uri",
            "description": "URI",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "placeAtDistanceConnection",
        "description": "A connection to a list of items.",
        "fields": [
          {
            "name": "edges",
            "description": "a list of edges",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "placeAtDistanceEdge",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pageInfo",
            "description": "details about this specific page",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "placeAtDistanceEdge",
        "description": "An edge in a connection",
        "fields": [
          {
            "name": "cursor",
            "description": "cursor marks a unique position or index into the connection",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "node",
            "description": "The item at the end of the edge",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "PlaceAtDistance",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "quayAtDistanceConnection",
        "description": "A connection to a list of items.",
        "fields": [
          {
            "name": "edges",
            "description": "a list of edges",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "quayAtDistanceEdge",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pageInfo",
            "description": "details about this specific page",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "quayAtDistanceEdge",
        "description": "An edge in a connection",
        "fields": [
          {
            "name": "cursor",
            "description": "cursor marks a unique position or index into the connection",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "node",
            "description": "The item at the end of the edge",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "QuayAtDistance",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      }
    ],
    "directives": [
      {
        "name": "deprecated",
        "description": "Marks the field, argument, input field or enum value as deprecated",
        "isRepeatable": false,
        "locations": [
          "ARGUMENT_DEFINITION",
          "ENUM_VALUE",
          "FIELD_DEFINITION",
          "INPUT_FIELD_DEFINITION"
        ],
        "args": [
          {
            "name": "reason",
            "description": "The reason for the deprecation",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": "\"No longer supported\"",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ]
      },
      {
        "name": "include",
        "description": "Directs the executor to include this field or fragment only when the `if` argument is true",
        "isRepeatable": false,
        "locations": [
          "FIELD",
          "FRAGMENT_SPREAD",
          "INLINE_FRAGMENT"
        ],
        "args": [
          {
            "name": "if",
            "description": "Included when true.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "defaultValue": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ]
      },
      {
        "name": "skip",
        "description": "Directs the executor to skip this field or fragment when the `if` argument is true.",
        "isRepeatable": false,
        "locations": [
          "FIELD",
          "FRAGMENT_SPREAD",
          "INLINE_FRAGMENT"
        ],
        "args": [
          {
            "name": "if",
            "description": "Skipped when true.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "defaultValue": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ]
      },
      {
        "name": "specifiedBy",
        "description": "Exposes a URL that specifies the behaviour of this scalar.",
        "isRepeatable": false,
        "locations": [
          "SCALAR"
        ],
        "args": [
          {
            "name": "url",
            "description": "The URL that specifies the behaviour of this scalar.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ]
      },
      {
        "name": "timingData",
        "description": "Add timing data to prometheus, if Actuator API is enabled",
        "isRepeatable": false,
        "locations": [
          "FIELD_DEFINITION"
        ],
        "args": []
      }
    ]
  }
}